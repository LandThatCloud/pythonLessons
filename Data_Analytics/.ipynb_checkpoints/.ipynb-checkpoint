{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Rank</th>\n",
       "      <th>Grade</th>\n",
       "      <th>Channel name</th>\n",
       "      <th>Video Uploads</th>\n",
       "      <th>Subscribers</th>\n",
       "      <th>Video views</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1st</td>\n",
       "      <td>A++</td>\n",
       "      <td>Zee TV</td>\n",
       "      <td>82757</td>\n",
       "      <td>18752951</td>\n",
       "      <td>20869786591</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2nd</td>\n",
       "      <td>A++</td>\n",
       "      <td>T-Series</td>\n",
       "      <td>12661</td>\n",
       "      <td>61196302</td>\n",
       "      <td>47548839843</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3rd</td>\n",
       "      <td>A++</td>\n",
       "      <td>Cocomelon - Nursery Rhymes</td>\n",
       "      <td>373</td>\n",
       "      <td>19238251</td>\n",
       "      <td>9793305082</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4th</td>\n",
       "      <td>A++</td>\n",
       "      <td>SET India</td>\n",
       "      <td>27323</td>\n",
       "      <td>31180559</td>\n",
       "      <td>22675948293</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5th</td>\n",
       "      <td>A++</td>\n",
       "      <td>WWE</td>\n",
       "      <td>36756</td>\n",
       "      <td>32852346</td>\n",
       "      <td>26273668433</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Rank Grade                Channel name Video Uploads Subscribers  \\\n",
       "0  1st  A++                       Zee TV         82757    18752951   \n",
       "1  2nd  A++                     T-Series         12661    61196302   \n",
       "2  3rd  A++   Cocomelon - Nursery Rhymes           373    19238251   \n",
       "3  4th  A++                    SET India         27323    31180559   \n",
       "4  5th  A++                          WWE         36756    32852346   \n",
       "\n",
       "   Video views  \n",
       "0  20869786591  \n",
       "1  47548839843  \n",
       "2   9793305082  \n",
       "3  22675948293  \n",
       "4  26273668433  "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "kick_data = pd.read_csv(\"/Users/simplyram/Documents/Python/Data_Analytics/kick_data.csv\")\n",
    "\n",
    "kick_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Rank', 'Grade', 'Channel name', 'Video Uploads', 'Subscribers',\n",
       "       'Video views'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kick_data.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "y = kick_data[\"Subscribers\"].str.replace(\"--\",\"0\").astype(int)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0       18752951\n",
       "1       61196302\n",
       "2       19238251\n",
       "3       31180559\n",
       "4       32852346\n",
       "5       17149705\n",
       "6       11373567\n",
       "7       12149206\n",
       "8       16082927\n",
       "9        2841811\n",
       "10      33492951\n",
       "11      39409726\n",
       "12       7662886\n",
       "13      18824912\n",
       "14      15899764\n",
       "15      11569723\n",
       "16      15830098\n",
       "17             0\n",
       "18      23603062\n",
       "19      17687229\n",
       "20      11593509\n",
       "21      23440427\n",
       "22      11347420\n",
       "23       2137907\n",
       "24        712562\n",
       "25      14469618\n",
       "26      16924523\n",
       "27      15836366\n",
       "28       2902714\n",
       "29        459906\n",
       "          ...   \n",
       "4970      885667\n",
       "4971     2414713\n",
       "4972      673787\n",
       "4973      829870\n",
       "4974     1436546\n",
       "4975      150091\n",
       "4976      229079\n",
       "4977      638404\n",
       "4978      106628\n",
       "4979     1558006\n",
       "4980     6532616\n",
       "4981      158905\n",
       "4982      647435\n",
       "4983      219238\n",
       "4984     2875705\n",
       "4985      820381\n",
       "4986     1123300\n",
       "4987     1536819\n",
       "4988     1349511\n",
       "4989      660742\n",
       "4990           0\n",
       "4991      663114\n",
       "4992      131766\n",
       "4993     1586835\n",
       "4994     1099659\n",
       "4995     2072942\n",
       "4996     1055091\n",
       "4997     3265735\n",
       "4998       32990\n",
       "4999       21172\n",
       "Name: Subscribers, Length: 5000, dtype: int64"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0       18752951\n",
       "1       61196302\n",
       "2       19238251\n",
       "3       31180559\n",
       "4       32852346\n",
       "5       17149705\n",
       "6       11373567\n",
       "7       12149206\n",
       "8       16082927\n",
       "9        2841811\n",
       "10      33492951\n",
       "11      39409726\n",
       "12       7662886\n",
       "13      18824912\n",
       "14      15899764\n",
       "15      11569723\n",
       "16      15830098\n",
       "17             0\n",
       "18      23603062\n",
       "19      17687229\n",
       "20      11593509\n",
       "21      23440427\n",
       "22      11347420\n",
       "23       2137907\n",
       "24        712562\n",
       "25      14469618\n",
       "26      16924523\n",
       "27      15836366\n",
       "28       2902714\n",
       "29        459906\n",
       "          ...   \n",
       "4970      885667\n",
       "4971     2414713\n",
       "4972      673787\n",
       "4973      829870\n",
       "4974     1436546\n",
       "4975      150091\n",
       "4976      229079\n",
       "4977      638404\n",
       "4978      106628\n",
       "4979     1558006\n",
       "4980     6532616\n",
       "4981      158905\n",
       "4982      647435\n",
       "4983      219238\n",
       "4984     2875705\n",
       "4985      820381\n",
       "4986     1123300\n",
       "4987     1536819\n",
       "4988     1349511\n",
       "4989      660742\n",
       "4990           0\n",
       "4991      663114\n",
       "4992      131766\n",
       "4993     1586835\n",
       "4994     1099659\n",
       "4995     2072942\n",
       "4996     1055091\n",
       "4997     3265735\n",
       "4998       32990\n",
       "4999       21172\n",
       "Name: Subscribers, Length: 5000, dtype: int64"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.to_numeric(y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean: 2417215.8144\n",
      "Median 1204651.5\n"
     ]
    }
   ],
   "source": [
    "print(\"Mean: {}\".format(y.mean()))\n",
    "\n",
    "print(\"Median {}\".format(y.median()))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "pandas.core.series.Series"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
